#include<dos.h>
#include<iostream.h>
#include<fstream.h>
#include<ctype.h>
#include<string.h>
#include<stdlib.h>
#include<stdio.h>
#include<conio.h>
#include<graphics.h>
			   // by muhammad areeb quadri
char keytxt[25];
// the cryp function
void cryptography(char infostr[],char keytxt[])
{
  // strcat(keytxt,infostr);

  cout<<endl;
  //puts(keytxt);

  for(int i=0;i<strlen(infostr);i++)
  {
   if(infostr[i]=='a')
   {cout<<keytxt[0];}
   else
   if(infostr[i]=='b')
   {cout<<keytxt[1];}
   else
   if(infostr[i]=='c')
   {cout<<keytxt[2];}
   else
   if(infostr[i]=='d')
   {cout<<keytxt[3]; }
   else
   if(infostr[i]=='e')
   {cout<<keytxt[4];  }
   else
   if(infostr[i]=='f')
   {cout<<keytxt[5]; }
   else
   if(infostr[i]=='g')
   {cout<<keytxt[6];  }
   else
   if(infostr[i]=='h')
   {cout<<keytxt[7];   }
   else
   if(infostr[i]=='i')
   {cout<<keytxt[8];  }
   else
   if(infostr[i]=='j')
   {cout<<keytxt[9];}
   else
   if(infostr[i]=='k')
    {cout<<keytxt[10]; }
   else
   if(infostr[i]=='l')
   {cout<<keytxt[11]; }
   else
   if(infostr[i]=='m')
   {cout<<keytxt[12]; }
   else
   if(infostr[i]=='n')
   {cout<<keytxt[13];  }
   else
   if(infostr[i]=='o')
   {cout<<keytxt[14];}
   else
   if(infostr[i]=='p')
   {cout<<keytxt[15]; }
   else
   if(infostr[i]=='q')
   {cout<<keytxt[16]; }
   else
   if(infostr[i]=='r')
   {cout<<keytxt[17]; }
   else
   if(infostr[i]=='s')
   {cout<<keytxt[18]; }
   else
   if(infostr[i]=='t')
   {cout<<keytxt[19]; }
   else
   if(infostr[i]=='u')
   {cout<<keytxt[20]; }
   else
   if(infostr[i]=='v')
   {cout<<keytxt[21]; }
   else
   if(infostr[i]=='w')
   {cout<<keytxt[22]; }
   else
   if(infostr[i]=='x')
   {cout<<keytxt[23]; }
   else
   if(infostr[i]=='y')
   {cout<<keytxt[24]; }
   else
   cout<<keytxt[25];



  }

  }

  void decodeit(char infostr[],char keytxt[])
{
  // strcat(keytxt,infostr);

  cout<<endl;
  //puts(keytxt);

  for(int i=0;i<strlen(infostr);i++)
  {
   if(infostr[i]==keytxt[0])
   {cout<<"a";}
   else
   if(infostr[i]==keytxt[1])
   {cout<<"b";}
   else
   if(infostr[i]==keytxt[2])
   {cout<<"c";}
   else
   if(infostr[i]==keytxt[3])
   {cout<<"d"; }
   else
   if(infostr[i]==keytxt[4])
   {cout<<"e";  }
     else
     if(infostr[i]==keytxt[5])
     {cout<<"f"; }
     else
     if(infostr[i]==keytxt[6])
     {cout<<"g";  }
   else
   if(infostr[i]==keytxt[7])
   {cout<<"h";   }
   else
   if(infostr[i]==keytxt[8])
   {cout<<"i";  }
    else
    if(infostr[i]==keytxt[9])
    {cout<<"j";}
    else
    if(infostr[i]==keytxt[10])
    {cout<<"k"; }
  else
  if(infostr[i]==keytxt[11])
  {cout<<"l"; }
   else
   if(infostr[i]==keytxt[12])
   {cout<<"m"; }
   else
   if(infostr[i]==keytxt[13])
   {cout<<"n";  }
     else
     if(infostr[i]==keytxt[14])
     {cout<<"o";}
      else
      if(infostr[i]==keytxt[15])
      {cout<<"p"; }
       else
       if(infostr[i]==keytxt[16])
       {cout<<"q"; }
	else
	if(infostr[i]==keytxt[17])
	{cout<<"r"; }
	 else
	 if(infostr[i]==keytxt[18])
	 {cout<<"s"; }
	  else
	  if(infostr[i]==keytxt[19])
	  {cout<<"t"; }
	   else
	   if(infostr[i]==keytxt[20])
	   {cout<<"u"; }
	    else
	    if(infostr[i]==keytxt[21])
	    {cout<<"v"; }
	    else
	     if(infostr[i]==keytxt[22])
	     {cout<<"w"; }
	      else
	      if(infostr[i]==keytxt[23])
	      {cout<<"x"; }
	       else
	       if(infostr[i]==keytxt[24])
	       {cout<<"y"; }
		else
		cout<<"z";



  }

  }


 char ans;
  int chk[10]; int ret=0;

//This function extracts a ques. from a selected file.
//smart function
void extrque(int f)
{
// int found=0;
 int guess,pick;
 int count=0;
 char c;
 randomize();
 int t;
 come:
 t=random(30);
 guess=t*198;       //3 line occupy 198 charspace

 if(f==1)
 {
    ifstream ext("nan.dat",ios::in);
    ext.seekg(0);
    ext.seekg(guess);
    ext.get(c);     //extracting ans which i have written in file
    ans=c;         //for getting answer of ques. from ans file.
    ext.seekg(guess+1);
     while(1)
    { ext.get(c);
      if(count==3)break;  //the whole ques and 4 opt occupy 3 lines in file
      if(c=='*')count++;
      else
    {
    cout<<c;
    }

    }
 }
 else if(f==2)
  {
   cout<<">>>>>>>>";
  }


  }
 // return ans;

    char ex;

//This function play and calculate user result.

void play(int mc)
{
   clrscr();

  if(mc==1)

{    //........
   int zro=0;
   int one=0;
   char userans;
   char resp='y';
   int scboard[70];
   int k=0;
    int fru=0;

 while((fru!=10)&&(fru!=20)&&(fru!=30))
 {  begin:
      clrscr();
      gotoxy(25,5);
      cout<<"Q U E S T I O N: "<<(one+zro)+1;
      gotoxy(1,8);

     extrque(1);
     cout<<"\nEnter opion no.:";
     cin>>userans;
     if(userans==ans)
    {
     cout<<"\nYOU ARE RIGHT!";
     one++;
     scboard[k]=1;
     k++;

    }
    else
   {
     cout<<"\nIncorrect";
     delay(1000);
     cout<<"\nCorrect option is:"<<ans;
     zro++;
     scboard[k]=0;
     k++;
   }

  cout<<endl<<"ENTER y:";
  cin>>resp;
     fru++;

 }

 clrscr();
 delay(500);
 int run=(zro+one);
 cout<<"\n\n\n\tS C O R E\n\n\n";
 cout<<"Score board:";
 for(int d=0;d<run;d++)
  cout<<scboard[d]<<" ";
  cout<<endl<<endl;
 cout<<endl<<"Number of right answers:"<<one;
 cout<<endl<<"\n\nNumber of wrong answers:"<<zro;
 float perc=(float)(one*100)/run;
 cout<<endl<<"\n\nPercentage score:"<<perc<<"%";
//......
cout<<"\nenter y or Y to play again:";
cin>>ex;
if((ex=='y')||(ex=='Y'))
goto begin;

}
else
if(mc==2)
{
  cout<<endl;
  int cho=0;
  int i,j;
  char inpkey[100];//key[26];
  come:
  cout<<"1.ENCRYPT THE INFORMATION"<<endl;
  cout<<"2.DYCRYPT THE CIPHER"<<endl;
  cin>>cho;


   if(cho==1)

  {

    cout<<"\nGENERATE THE KEY:";
    cout<<"\nENTER YOUR KEY (Enter any word or phrase)MUST BE LONG:";
   // cout<<"\nas length of key directly proportional to security:\n ";
    cout<<"\n";
    cin>>inpkey;
				     int extr=0;
    for(i=0;inpkey[i]!='\0';i++)
   {

      for(j=i+1;j<strlen(inpkey);j++)
     {
       if(inpkey[i]==inpkey[j])
       {
       inpkey[j]='&';   extr++;
       }

     }
   }
     for(i=0;inpkey[i]!='\0';i++)
     {
      //cout<<inpkey[i];
     }
		int es=0;
    // cout<<endl<<"key generated by you is:";   //int pos=(strlen(inpkey))-extr;
     for(int q=0;q<(strlen(inpkey));q++)
     {
       if(inpkey[q]!='&')
       {
       keytxt[es]=inpkey[q];
       es++;
       }

     }
       cout<<endl;
       cout<<"\ntotal alphabets in your key:\n";
       for(int fj=0;keytxt[fj]!='\0';fj++)
       cout<<keytxt[fj];

    cout<<endl;
     char init='a';
     init=init+es;
     for(es;es<26;es++)
     {keytxt[es]=init;
     init++;
     }
	     char num=(char) '1';      // making encrption more complex for decoder
   for(int it=25;it>=0;it--)           //to decode with num of possibilities exploding
   {  for(int oi=0;oi<26;oi++)
      if((keytxt[oi]==keytxt[it])&&(oi!=it))
     { keytxt[it]=num;num++;
     }

   }


     cout<<endl<<"Final key(encrypted code can not be decrypted by brute force)";
    cout<<endl;
    for(fj=0;keytxt[fj]!='\0';fj++)
       cout<<keytxt[fj];


    //prompting user to enter the string that has to be encrypt
   delay(1000);
   char infostr[50];
   cout<<"\n\n\n\n\nEnter the information or string that has to be encrypt:";
   cout<<endl;
   cin>>infostr;
   cout<<endl<<"GENERATED CIPHER:\n";
   cryptography(infostr,keytxt);
   char back;
   cout<<"\n\nPress B or b to go back:";cin>>back;
   if(back=='b')
   goto come;


}
if(cho==2)
{ char infostr[50];
  cout<<"Enter the string to be decrypted:";
  cin>>infostr;
  cout<<endl<<"Enter the key to decrypt:";
  char enckey[100];
  cin>>enckey;

    for(int i=0;enckey[i]!='\0';i++)
   {

      for(int j=i+1;j<strlen(enckey);j++)
     {
       if(enckey[i]==enckey[j])
       {
       enckey[j]='&';
       }

     }
   }
		int es=0;
     for(int q=0;q<(strlen(enckey));q++)
     {
       if(enckey[q]!='&')
       {
       keytxt[es]=enckey[q];
       es++;
       }

     }
       cout<<endl;


    cout<<endl;
     char init='a';
     init=init+es;
     for(es;es<26;es++)
     {keytxt[es]=init;
     init++;
     }
	     char num=(char) '1';      // making encrption more complex for decoder
   for(int it=25;it>=0;it--)           //to decode with num of possibilities exploding
   {  for(int oi=0;oi<26;oi++)
      if((keytxt[oi]==keytxt[it])&&(oi!=it))
     { keytxt[it]=num;num++;
     }

   }


      cout<<endl<<"THE ORIGINAL STRING IS:\n";
     decodeit(infostr,keytxt); char back;
     cout<<"\n\npress b to go back:";cin>>back;
     if(back=='b')
     goto come;

}

}

}


void main()
{
/*

clrscr();
int ch,mc;  //
gotoxy(27,7);cout<<"By";
gotoxy(31,11);cout<<"MUHAMMAD";
gotoxy(34,12);cout<<"AREEB QUADRI";
gotoxy(32,20);cout<<"\nLITTLE FLOWERS SR.SEC SCHOOL";
delay(1500);
gotoxy(27,7);cout<<"  ";delay(700);
gotoxy(31,11);cout<<"         ";delay(500);
gotoxy(34,12);cout<<"      QUADRI";delay(700);
gotoxy(34,12);cout<<"     Q UADRI";delay(700);
gotoxy(34,12);cout<<"   Q  U ADRI";delay(700);
gotoxy(34,12);cout<<"Q   U  A DRI";delay(700);
gotoxy(34,12);cout<<"Q   U  A DRI";delay(700);
gotoxy(34,12);cout<<"Q   U  I DRZ";delay(700);
gotoxy(34,12);cout<<"Q   U  I   Z";delay(100);
delay(700);

clrscr();
//LOADING SCREEN
int i,gd=DETECT,gm;
initgraph(&gd,&gm,"..\\bgi");
setcolor(WHITE);
for(i=35;i<555;i++)
{
line(25+i,170,25+i,200);
}
for(i=35;i<555;i++)
{
setcolor(GREEN); //** this is for green filling in the loadaing bar.
line(25+i,170,25+i,200); //** this is for increasing the size of green bar.
delay(5);
setcolor(WHITE); //** this is for the text color.
settextstyle(SMALL_FONT,0,16); //** this is for the font style.
outtextxy(220,220,"LOADING"); //** text that you want to show.
delay(1); //** delay for some seconds.
setcolor(rand()%16); //** this is for color full loading dots.
settextstyle(SMALL_FONT,HORIZ_DIR,16);
outtextxy(390,220,"..."); //** forshowing the dots.
delay(5);
}
closegraph(); //** for closing the graph.
getch();

*/
clrscr();
int ch,mc;
gotoxy(37,11);
cout<<"\n\t*********Winner winner chicken dinner**********";
cout<<"\n1.QUIZ"<<"\n2.CRYPTOGRAPHY:CIPHER AND DECIPHER";
cout<<"\nENTER YOUR CHOICE:";
cin>>ch;
if(ch==1)
{
 clrscr();
 cout<<"\n\t\tQuiz Menu";
 cout<<"\n\t**********************";
 delay(1000);
  play(1);

}
else
{
 clrscr();
 play(2);

}


getch();
}




